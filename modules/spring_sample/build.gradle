buildscript {

    ext {
        verSpringboot = '1.5.7.RELEASE'
    }

    repositories {
        maven {
            url "http://repo1.maven.org/maven2/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'http://repo.spring.io/plugins-release'
        }
        maven {
            url 'https://mvnrepository.com/artifact'
        }
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${verSpringboot}"
    }
}

apply plugin: 'spring-boot'
apply plugin: 'application'
apply plugin: 'groovy'
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"
                             , "-Djava.net.preferIPv4Stack=true"
                             , "-Djava.net.preferIPv6Addresses=false"
                             ,"-Dnetworkaddress.cache.ttl=0"
                             ,"-Dnetworkaddress.cache.negative.ttl=0"]

mainClassName = 'com.example.practice.app.Application'
applicationName = 'spring_sample'

jar {
    baseName = 'spring_sample'
    version =  '0.0.1-SNAPSHOT'
}

springBoot {
    executable = true
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava {
    options.fork = true
    options.forkOptions.executable = "javac" // assumes that javac is on PATH
    options.compilerArgs << "-XDignore.symbol.file"
}

configurations {
    jmockit
}

dependencies {
    def verSpringboot = "1.5.7.RELEASE"

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: verSpringboot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: verSpringboot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: verSpringboot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: verSpringboot
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: verSpringboot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: verSpringboot
}

dependencies {

    //https://mvnrepository.com/artifact/org.jmockit/jmockit
    jmockit 'org.jmockit:jmockit:1.35'

    testCompile configurations.jmockit.dependencies

    //https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.12'

    testCompile 'org.assertj:assertj-core:3.4.1'

    // Dependency for integration test
//    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
//    testCompile "org.codehaus.gpars:gpars:1.2.1"

    // optional dependencies for using Spock
//    testCompile "org.hamcrest:hamcrest-all:1.3" // only necessary if Hamcrest matchers are used
//    testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
//    testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)

}

test {
    sourceSets.test.compileClasspath = configurations.jmockit + sourceSets.test.compileClasspath
    sourceSets.test.runtimeClasspath = configurations.jmockit + sourceSets.test.runtimeClasspath
}
